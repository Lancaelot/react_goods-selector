{"version":3,"sources":["Components/Good.js","Components/GoodsList.js","App.js","index.js"],"names":["Good","item","className","GoodsList","preparedGoods","clickHandler","map","good","type","onClick","key","id","name","index","App","state","selectedGoods","SelectGoodsHandler","setState","includes","goodIndex","indexOf","splice","ClearGoodsHandler","this","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"sOAgBeA,G,YAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,oCACE,yBAAKC,UAAU,mBAAmBD,GAClC,yBAAKC,UAAU,kBACb,uBAAGA,UAAU,kBCkBJC,EArBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAlB,OAChB,oCACGD,EAAcE,KAAI,SAAAC,GAAI,OACrB,4BACEC,KAAK,SACLN,UAAU,qBACVO,QAAS,kBAAMJ,EAAaE,IAC5BG,IAAKH,EAAKI,IAEV,kBAAC,EAAD,CAAMV,KAAMM,EAAKK,aCMnBR,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCE,KAAI,SAACL,EAAMY,GAAP,MACxC,CACED,KAAMX,EACNU,GAAIE,MA0DOC,E,4MArDbC,MAAQ,CACNC,cAAe,I,EAGjBC,mBAAqB,YAAmB,IAAhBL,EAAe,EAAfA,KAAe,EAATD,GAC5B,EAAKO,UAAS,SAACH,GACb,IAAKA,EAAMC,cAAcG,SAApB,WAAiCP,IACpC,MAAO,CACLI,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,YAA+BJ,MAIhD,IAAMQ,EAAYL,EAAMC,cAAcK,QAApB,WAAgCT,IAIlD,OAFAG,EAAMC,cAAcM,OAAOF,EAAW,GAE/B,CACLJ,cAAeD,EAAMC,mB,EAK3BO,kBAAoB,WAClB,EAAKL,SACH,CACEF,cAAe,M,uDAMnB,OACE,yBAAKd,UAAU,OACb,8CAEGsB,KAAKT,MAAMC,eAEd,kBAAC,EAAD,CACEZ,cAAeA,EACfC,aAAcmB,KAAKP,qBAErB,4BACEf,UAAU,sBACVO,QAASe,KAAKD,kBACdf,KAAK,UAHP,kB,GA1CUiB,iBCtBlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.42550beb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Good = ({ item }) => (\n  <>\n    <div className=\"visible content\">{item}</div>\n    <div className=\"hidden content\">\n      <i className=\"shop icon\" />\n    </div>\n  </>\n);\n\nGood.propTypes = {\n  item: PropTypes.string.isRequired,\n};\n\nexport default Good;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Good from './Good';\n\nconst GoodsList = ({ preparedGoods, clickHandler }) => (\n  <>\n    {preparedGoods.map(good => (\n      <button\n        type=\"button\"\n        className=\"ui animated button\"\n        onClick={() => clickHandler(good)}\n        key={good.id}\n      >\n        <Good item={good.name} />\n      </button>\n    ))\n    }\n  </>\n);\n\nGoodsList.propTypes = {\n  preparedGoods: PropTypes.string.isRequired,\n  clickHandler: PropTypes.element.isRequired,\n};\n\nexport default GoodsList;\n","\nimport React, { PureComponent } from 'react';\nimport './App.scss';\nimport 'semantic-ui-css/semantic.min.css';\nimport GoodsList from './Components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((item, index) => (\n  {\n    name: item,\n    id: index,\n  }\n));\n\nclass App extends PureComponent {\n  state = {\n    selectedGoods: [],\n  }\n\n  SelectGoodsHandler = ({ name, id }) => {\n    this.setState((state) => {\n      if (!state.selectedGoods.includes(` ${name}`)) {\n        return {\n          selectedGoods: [...state.selectedGoods, ` ${name}`],\n        };\n      }\n\n      const goodIndex = state.selectedGoods.indexOf(` ${name}`);\n\n      state.selectedGoods.splice(goodIndex, 1);\n\n      return {\n        selectedGoods: state.selectedGoods,\n      };\n    });\n  }\n\n  ClearGoodsHandler = () => {\n    this.setState(\n      {\n        selectedGoods: [],\n      },\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>\n          Selected goods:\n          {this.state.selectedGoods}\n        </h1>\n        <GoodsList\n          preparedGoods={preparedGoods}\n          clickHandler={this.SelectGoodsHandler}\n        />\n        <button\n          className=\"fluid ui red button\"\n          onClick={this.ClearGoodsHandler}\n          type=\"button\"\n        >\n          Clear All\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n/* this.setState(prevState => {\n  if (!prevState.selectedGoods.includes(` ${name}`)) {\n    return ({\n      selectedGoods: [...prevState.selectedGoods, ` ${name}`],\n    });\n  }\n\n  const currIndex = this.state.selectedGoods.indexOf(` ${name}`);\n\n  return ({\n    selectedGoods: this.state.selectedGoods.splice(currIndex, 1),\n  });\n});\n */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}