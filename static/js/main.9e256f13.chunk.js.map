{"version":3,"sources":["Components/Good.js","Components/GoodsList.js","App.js","index.js"],"names":["Good","item","className","GoodsList","preparedGoods","clickHandler","map","good","type","onClick","key","id","tabIndex","name","index","App","state","selectedGoods","SelectGoodsHandler","setState","includes","filter","ClearGoodsHandler","this","join","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"sOAgBeA,G,YAbF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,oCACE,yBAAKC,UAAU,mBAAmBD,GAClC,yBAAKC,UAAU,kBACb,uBAAGA,UAAU,kBCmBJC,EAtBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,aAAlB,OAChB,oCACGD,EAAcE,KAAI,SAAAC,GAAI,OACrB,4BACEC,KAAK,SACLN,UAAU,qBACVO,QAAS,kBAAMJ,EAAaE,IAC5BG,IAAKH,EAAKI,GACVC,SAAS,MAET,kBAAC,EAAD,CAAMX,KAAMM,EAAKM,aCKnBT,EAbkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGoCE,KAAI,SAACL,EAAMa,GAAP,MACxC,CACED,KAAMZ,EACNU,GAAIG,MAwDOC,E,4MAnDbC,MAAQ,CACNC,cAAe,I,EAGjBC,mBAAqB,YAAmB,IAAhBL,EAAe,EAAfA,KAAe,EAATF,GAC5B,EAAKQ,UAAS,SAACH,GACb,OAAKA,EAAMC,cAAcG,SAASP,GAS3B,CACLI,cAJoB,YAAID,EAAMC,eAC7BI,QAAO,SAAAd,GAAI,OAAIA,IAASM,MANlB,CACLI,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BJ,S,EAahDS,kBAAoB,WAClB,EAAKH,SAAS,CACZF,cAAe,M,uDAKjB,OACE,yBAAKf,UAAU,OACb,8CAEGqB,KAAKP,MAAMC,cAAcO,KAAK,OAEjC,kBAAC,EAAD,CACEpB,cAAeA,EACfC,aAAckB,KAAKL,qBAErB,4BACEhB,UAAU,sBACVO,QAASc,KAAKD,kBACdd,KAAK,SACLI,SAAS,MAJX,kB,GAvCUa,iBCtBlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9e256f13.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Good = ({ item }) => (\n  <>\n    <div className=\"visible content\">{item}</div>\n    <div className=\"hidden content\">\n      <i className=\"shop icon\" />\n    </div>\n  </>\n);\n\nGood.propTypes = {\n  item: PropTypes.string.isRequired,\n};\n\nexport default Good;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Good from './Good';\n\nconst GoodsList = ({ preparedGoods, clickHandler }) => (\n  <>\n    {preparedGoods.map(good => (\n      <button\n        type=\"button\"\n        className=\"ui animated button\"\n        onClick={() => clickHandler(good)}\n        key={good.id}\n        tabIndex=\"-1\"\n      >\n        <Good item={good.name} />\n      </button>\n    ))\n    }\n  </>\n);\n\nGoodsList.propTypes = {\n  preparedGoods: PropTypes.string.isRequired,\n  clickHandler: PropTypes.element.isRequired,\n};\n\nexport default GoodsList;\n","\nimport React, { PureComponent } from 'react';\nimport './App.scss';\nimport 'semantic-ui-css/semantic.min.css';\nimport GoodsList from './Components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst preparedGoods = goodsFromServer.map((item, index) => (\n  {\n    name: item,\n    id: index,\n  }\n));\n\nclass App extends PureComponent {\n  state = {\n    selectedGoods: [],\n  }\n\n  SelectGoodsHandler = ({ name, id }) => {\n    this.setState((state) => {\n      if (!state.selectedGoods.includes(name)) {\n        return {\n          selectedGoods: [...state.selectedGoods, name],\n        };\n      }\n\n      const filteredGoods = [...state.selectedGoods]\n        .filter(good => good !== name);\n\n      return {\n        selectedGoods: filteredGoods,\n      };\n    });\n  }\n\n  ClearGoodsHandler = () => {\n    this.setState({\n      selectedGoods: [],\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <h1>\n          Selected goods:\n          {this.state.selectedGoods.join(', ')}\n        </h1>\n        <GoodsList\n          preparedGoods={preparedGoods}\n          clickHandler={this.SelectGoodsHandler}\n        />\n        <button\n          className=\"fluid ui red button\"\n          onClick={this.ClearGoodsHandler}\n          type=\"button\"\n          tabIndex=\"-1\"\n        >\n          Clear All\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}